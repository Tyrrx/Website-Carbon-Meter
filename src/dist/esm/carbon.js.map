{
  "version": 3,
  "sources": ["../../node_modules/@tgwf/co2/dist/esm/1byte.js", "../../node_modules/@tgwf/co2/dist/esm/constants/file-size.js", "../../node_modules/@tgwf/co2/dist/esm/data/average-intensities.min.js", "../../node_modules/@tgwf/co2/dist/esm/constants/index.js", "../../node_modules/@tgwf/co2/dist/esm/helpers/index.js", "../../node_modules/@tgwf/co2/dist/esm/sustainable-web-design.js", "../../node_modules/@tgwf/co2/dist/esm/co2.js", "../../node_modules/@tgwf/co2/dist/esm/hosting-json.js", "../../node_modules/@tgwf/co2/dist/esm/hosting-api.js", "../../node_modules/@tgwf/co2/dist/esm/hosting.js", "../../node_modules/@tgwf/co2/dist/esm/data/marginal-intensities-2021.min.js", "../../node_modules/@tgwf/co2/dist/esm/index.js", "../../code/carbon.js"],
  "sourcesContent": ["const CO2_PER_KWH_IN_DC_GREY = 519;\nconst CO2_PER_KWH_NETWORK_GREY = 475;\nconst CO2_PER_KWH_IN_DC_GREEN = 0;\nconst KWH_PER_BYTE_IN_DC = 72e-12;\nconst FIXED_NETWORK_WIRED = 429e-12;\nconst FIXED_NETWORK_WIFI = 152e-12;\nconst FOUR_G_MOBILE = 884e-12;\nconst KWH_PER_BYTE_FOR_NETWORK = (FIXED_NETWORK_WIRED + FIXED_NETWORK_WIFI + FOUR_G_MOBILE) / 3;\nconst KWH_PER_BYTE_FOR_DEVICES = 13e-11;\nclass OneByte {\n  constructor(options) {\n    this.options = options;\n    this.KWH_PER_BYTE_FOR_NETWORK = KWH_PER_BYTE_FOR_NETWORK;\n  }\n  perByte(bytes, green) {\n    if (bytes < 1) {\n      return 0;\n    }\n    if (green) {\n      const Co2ForDC = bytes * KWH_PER_BYTE_IN_DC * CO2_PER_KWH_IN_DC_GREEN;\n      const Co2forNetwork = bytes * KWH_PER_BYTE_FOR_NETWORK * CO2_PER_KWH_NETWORK_GREY;\n      return Co2ForDC + Co2forNetwork;\n    }\n    const KwHPerByte = KWH_PER_BYTE_IN_DC + KWH_PER_BYTE_FOR_NETWORK;\n    return bytes * KwHPerByte * CO2_PER_KWH_IN_DC_GREY;\n  }\n}\nvar byte_default = OneByte;\nexport {\n  OneByte,\n  byte_default as default\n};\n", "const GIGABYTE = 1e3 * 1e3 * 1e3;\nvar file_size_default = {\n  GIGABYTE\n};\nexport {\n  file_size_default as default\n};\n", "const data = { \"AFG\": 132.53, \"AFRICA\": 559.42, \"ALB\": 24.29, \"DZA\": 634.61, \"ASM\": 611.11, \"AGO\": 174.73, \"ATG\": 611.11, \"ARG\": 394.62, \"ARM\": 264.54, \"ABW\": 561.22, \"ASEAN\": 554.5, \"ASIA\": 591.19, \"AUS\": 570.35, \"AUT\": 110.81, \"AZE\": 671.39, \"BHS\": 660.1, \"BHR\": 904.62, \"BGD\": 678.11, \"BRB\": 605.51, \"BLR\": 441.74, \"BEL\": 138.11, \"BLZ\": 225.81, \"BEN\": 584.07, \"BTN\": 23.33, \"BOL\": 489.14, \"BIH\": 600, \"BWA\": 847.91, \"BRA\": 105.51, \"BRN\": 893.91, \"BGR\": 335.33, \"BFA\": 467.53, \"BDI\": 250, \"CPV\": 558.14, \"KHM\": 417.71, \"CMR\": 305.42, \"CAN\": 161.43, \"CYM\": 642.86, \"CAF\": 0, \"TCD\": 628.57, \"CHL\": 353.52, \"CHN\": 585.82, \"COL\": 214.88, \"COM\": 642.86, \"COG\": 700, \"COD\": 24.46, \"COK\": 250, \"CRI\": 26.46, \"CIV\": 393.89, \"HRV\": 204.96, \"CUB\": 637.61, \"CYP\": 534.32, \"CZE\": 449.72, \"DNK\": 151.65, \"DJI\": 692.31, \"DMA\": 529.41, \"DOM\": 580.78, \"ECU\": 150.69, \"EGY\": 570.13, \"SLV\": 116.54, \"GNQ\": 591.84, \"ERI\": 631.58, \"EST\": 416.67, \"SWZ\": 172.41, \"ETH\": 24.64, \"EU\": 243.83, \"EUROPE\": 327.69, \"FLK\": 500, \"FRO\": 404.76, \"FJI\": 288.46, \"FIN\": 79.16, \"FRA\": 56.04, \"GUF\": 217.82, \"PYF\": 442.86, \"G20\": 482.92, \"G7\": 361.52, \"GAB\": 491.6, \"GMB\": 666.67, \"GEO\": 167.02, \"DEU\": 380.95, \"GHA\": 484, \"GRC\": 336.57, \"GRL\": 178.57, \"GRD\": 640, \"GLP\": 500, \"GUM\": 622.86, \"GTM\": 328.27, \"GIN\": 236.84, \"GNB\": 625, \"GUY\": 640.35, \"HTI\": 567.31, \"HND\": 282.27, \"HKG\": 699.5, \"HUN\": 204.19, \"ISL\": 27.68, \"IND\": 705.13, \"IDN\": 675.93, \"IRN\": 665.15, \"IRQ\": 688.81, \"IRL\": 290.81, \"ISR\": 582.93, \"ITA\": 330.72, \"JAM\": 555.56, \"JPN\": 512.81, \"JOR\": 540.92, \"KAZ\": 830.41, \"KEN\": 83.33, \"KIR\": 666.67, \"XKX\": 894.65, \"KWT\": 649.2, \"KGZ\": 147.29, \"LAO\": 265.51, \"LATIN AMERICA AND CARIBBEAN\": 260.28, \"LVA\": 123.2, \"LBN\": 599.01, \"LSO\": 20, \"LBR\": 227.85, \"LBY\": 818.69, \"LTU\": 160.07, \"LUX\": 105.26, \"MAC\": 448.98, \"MDG\": 436.44, \"MWI\": 66.67, \"MYS\": 605.83, \"MDV\": 611.77, \"MLI\": 408, \"MLT\": 459.14, \"MTQ\": 523.18, \"MRT\": 464.71, \"MUS\": 632.48, \"MEX\": 475.36, \"MIDDLE EAST\": 660.46, \"MDA\": 648.5, \"MNG\": 771.8, \"MNE\": 417.07, \"MSR\": 1e3, \"MAR\": 662.64, \"MOZ\": 135.65, \"MMR\": 483.57, \"NAM\": 59.26, \"NRU\": 750, \"NPL\": 24.44, \"NLD\": 267.62, \"NCL\": 660.58, \"NZL\": 110.89, \"NIC\": 265.12, \"NER\": 670.89, \"NGA\": 516.23, \"NORTH AMERICA\": 356.01, \"PRK\": 389.59, \"MKD\": 565.35, \"NOR\": 30.08, \"OCEANIA\": 507.63, \"OECD\": 360.53, \"OMN\": 564.69, \"PAK\": 463.66, \"PSE\": 516.13, \"PAN\": 161.68, \"PNG\": 507.25, \"PRY\": 24.31, \"PER\": 251.74, \"POL\": 661.93, \"PRT\": 165.55, \"PRI\": 678.74, \"QAT\": 602.59, \"REU\": 572.82, \"ROU\": 240.58, \"RUS\": 436.28, \"RWA\": 316.33, \"KNA\": 636.36, \"LCA\": 666.67, \"SPM\": 600, \"VCT\": 529.41, \"WSM\": 473.68, \"STP\": 642.86, \"SAU\": 706.79, \"SEN\": 511.6, \"SRB\": 636.06, \"SYC\": 564.52, \"SLE\": 50, \"SGP\": 474, \"SVK\": 116.77, \"SVN\": 231.28, \"SLB\": 700, \"SOM\": 578.95, \"ZAF\": 729.67, \"KOR\": 441.65, \"SSD\": 629.03, \"ESP\": 174.05, \"LKA\": 509.78, \"SDN\": 263.16, \"SUR\": 349.28, \"SWE\": 40.7, \"CHE\": 34.84, \"SYR\": 701.66, \"TWN\": 639.53, \"TJK\": 116.86, \"TZA\": 339.25, \"THA\": 560.74, \"PHL\": 601.1, \"TGO\": 443.18, \"TON\": 625, \"TTO\": 681.53, \"TUN\": 564.62, \"TUR\": 464.59, \"TKM\": 1306.03, \"TCA\": 653.85, \"UGA\": 44.53, \"UKR\": 259.69, \"ARE\": 561.14, \"GBR\": 237.59, \"USA\": 385.98, \"URY\": 112.65, \"UZB\": 1167.6, \"VUT\": 571.43, \"VEN\": 185.8, \"VNM\": 409.8, \"VGB\": 647.06, \"VIR\": 632.35, \"WORLD\": 485.99, \"YEM\": 566.1, \"ZMB\": 111.97, \"ZWE\": 297.87 };\nconst type = \"average\";\nvar average_intensities_min_default = { data, type };\nexport {\n  data,\n  average_intensities_min_default as default,\n  type\n};\n", "import fileSize from \"./file-size.js\";\nimport averageIntensity from \"../data/average-intensities.min.js\";\nconst KWH_PER_GB = 0.81;\nconst END_USER_DEVICE_ENERGY = 0.52;\nconst NETWORK_ENERGY = 0.14;\nconst DATACENTER_ENERGY = 0.15;\nconst PRODUCTION_ENERGY = 0.19;\nconst GLOBAL_GRID_INTENSITY = averageIntensity.data[\"WORLD\"];\nconst RENEWABLES_GRID_INTENSITY = 50;\nconst FIRST_TIME_VIEWING_PERCENTAGE = 0.75;\nconst RETURNING_VISITOR_PERCENTAGE = 0.25;\nconst PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD = 0.02;\nexport {\n  DATACENTER_ENERGY,\n  END_USER_DEVICE_ENERGY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  GLOBAL_GRID_INTENSITY,\n  KWH_PER_GB,\n  NETWORK_ENERGY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  PRODUCTION_ENERGY,\n  RENEWABLES_GRID_INTENSITY,\n  RETURNING_VISITOR_PERCENTAGE,\n  fileSize\n};\n", "import { averageIntensity } from \"../index.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE\n} from \"../constants/index.js\";\nconst formatNumber = (num) => parseFloat(num.toFixed(2));\nfunction parseOptions(options) {\n  var _a, _b, _c, _d, _e, _f;\n  if (typeof options !== \"object\") {\n    throw new Error(\"Options must be an object\");\n  }\n  const adjustments = {};\n  if (options == null ? void 0 : options.gridIntensity) {\n    adjustments.gridIntensity = {};\n    const { device, dataCenter, network } = options.gridIntensity;\n    if (device || device === 0) {\n      if (typeof device === \"object\") {\n        if (!averageIntensity.data[(_a = device.country) == null ? void 0 : _a.toUpperCase()]) {\n          console.warn(`\"${device.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"device\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"device\"] = {\n          country: device.country,\n          value: parseFloat(averageIntensity.data[(_b = device.country) == null ? void 0 : _b.toUpperCase()])\n        };\n      } else if (typeof device === \"number\") {\n        adjustments.gridIntensity[\"device\"] = {\n          value: device\n        };\n      } else {\n        adjustments.gridIntensity[\"device\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The device grid intensity must be a number or an object. You passed in a ${typeof device}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (dataCenter || dataCenter === 0) {\n      if (typeof dataCenter === \"object\") {\n        if (!averageIntensity.data[(_c = dataCenter.country) == null ? void 0 : _c.toUpperCase()]) {\n          console.warn(`\"${dataCenter.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"dataCenter\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          country: dataCenter.country,\n          value: parseFloat(averageIntensity.data[(_d = dataCenter.country) == null ? void 0 : _d.toUpperCase()])\n        };\n      } else if (typeof dataCenter === \"number\") {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: dataCenter\n        };\n      } else {\n        adjustments.gridIntensity[\"dataCenter\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The data center grid intensity must be a number or an object. You passed in a ${typeof dataCenter}. \nFalling back to global average grid intensity.`);\n      }\n    }\n    if (network || network === 0) {\n      if (typeof network === \"object\") {\n        if (!averageIntensity.data[(_e = network.country) == null ? void 0 : _e.toUpperCase()]) {\n          console.warn(`\"${network.country}\" is not a valid country. Please use a valid 3 digit ISO 3166 country code. \nSee https://developers.thegreenwebfoundation.org/co2js/data/ for more information.  Falling back to global average grid intensity. \nFalling back to global average grid intensity.`);\n          adjustments.gridIntensity[\"network\"] = {\n            value: GLOBAL_GRID_INTENSITY\n          };\n        }\n        adjustments.gridIntensity[\"network\"] = {\n          country: network.country,\n          value: parseFloat(averageIntensity.data[(_f = network.country) == null ? void 0 : _f.toUpperCase()])\n        };\n      } else if (typeof network === \"number\") {\n        adjustments.gridIntensity[\"network\"] = {\n          value: network\n        };\n      } else {\n        adjustments.gridIntensity[\"network\"] = {\n          value: GLOBAL_GRID_INTENSITY\n        };\n        console.warn(`The network grid intensity must be a number or an object. You passed in a ${typeof network}. \nFalling back to global average grid intensity.`);\n      }\n    }\n  }\n  if ((options == null ? void 0 : options.dataReloadRatio) || options.dataReloadRatio === 0) {\n    if (typeof options.dataReloadRatio === \"number\") {\n      if (options.dataReloadRatio >= 0 && options.dataReloadRatio <= 1) {\n        adjustments.dataReloadRatio = options.dataReloadRatio;\n      } else {\n        adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n        console.warn(`The dataReloadRatio option must be a number between 0 and 1. You passed in ${options.dataReloadRatio}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD;\n      console.warn(`The dataReloadRatio option must be a number. You passed in a ${typeof options.dataReloadRatio}. \nFalling back to default value.`);\n    }\n  }\n  if ((options == null ? void 0 : options.firstVisitPercentage) || options.firstVisitPercentage === 0) {\n    if (typeof options.firstVisitPercentage === \"number\") {\n      if (options.firstVisitPercentage >= 0 && options.firstVisitPercentage <= 1) {\n        adjustments.firstVisitPercentage = options.firstVisitPercentage;\n      } else {\n        adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n        console.warn(`The firstVisitPercentage option must be a number between 0 and 1. You passed in ${options.firstVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.firstVisitPercentage = FIRST_TIME_VIEWING_PERCENTAGE;\n      console.warn(`The firstVisitPercentage option must be a number. You passed in a ${typeof options.firstVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  if ((options == null ? void 0 : options.returnVisitPercentage) || options.returnVisitPercentage === 0) {\n    if (typeof options.returnVisitPercentage === \"number\") {\n      if (options.returnVisitPercentage >= 0 && options.returnVisitPercentage <= 1) {\n        adjustments.returnVisitPercentage = options.returnVisitPercentage;\n      } else {\n        adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n        console.warn(`The returnVisitPercentage option must be a number between 0 and 1. You passed in ${options.returnVisitPercentage}. \nFalling back to default value.`);\n      }\n    } else {\n      adjustments.returnVisitPercentage = RETURNING_VISITOR_PERCENTAGE;\n      console.warn(`The returnVisitPercentage option must be a number. You passed in a ${typeof options.returnVisitPercentage}. \nFalling back to default value.`);\n    }\n  }\n  return adjustments;\n}\nfunction getApiRequestHeaders(comment = \"\") {\n  return { \"User-Agent\": `co2js/${\"0.15.0\"} ${comment}` };\n}\nexport {\n  formatNumber,\n  getApiRequestHeaders,\n  parseOptions\n};\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport {\n  fileSize,\n  KWH_PER_GB,\n  END_USER_DEVICE_ENERGY,\n  NETWORK_ENERGY,\n  DATACENTER_ENERGY,\n  PRODUCTION_ENERGY,\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY,\n  FIRST_TIME_VIEWING_PERCENTAGE,\n  RETURNING_VISITOR_PERCENTAGE,\n  PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD\n} from \"./constants/index.js\";\nimport { formatNumber } from \"./helpers/index.js\";\nclass SustainableWebDesign {\n  constructor(options) {\n    this.options = options;\n  }\n  energyPerByteByComponent(bytes) {\n    const transferedBytesToGb = bytes / fileSize.GIGABYTE;\n    const energyUsage = transferedBytesToGb * KWH_PER_GB;\n    return {\n      consumerDeviceEnergy: energyUsage * END_USER_DEVICE_ENERGY,\n      networkEnergy: energyUsage * NETWORK_ENERGY,\n      productionEnergy: energyUsage * PRODUCTION_ENERGY,\n      dataCenterEnergy: energyUsage * DATACENTER_ENERGY\n    };\n  }\n  co2byComponent(energyByComponent, carbonIntensity = GLOBAL_GRID_INTENSITY, options = {}) {\n    let deviceCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let networkCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let dataCenterCarbonIntensity = GLOBAL_GRID_INTENSITY;\n    let globalEmissions = GLOBAL_GRID_INTENSITY;\n    if (options == null ? void 0 : options.gridIntensity) {\n      const { device, network, dataCenter } = options.gridIntensity;\n      if ((device == null ? void 0 : device.value) || (device == null ? void 0 : device.value) === 0) {\n        deviceCarbonIntensity = device.value;\n      }\n      if ((network == null ? void 0 : network.value) || (network == null ? void 0 : network.value) === 0) {\n        networkCarbonIntensity = network.value;\n      }\n      if ((dataCenter == null ? void 0 : dataCenter.value) || (dataCenter == null ? void 0 : dataCenter.value) === 0) {\n        dataCenterCarbonIntensity = dataCenter.value;\n      }\n    }\n    if (carbonIntensity === true) {\n      dataCenterCarbonIntensity = RENEWABLES_GRID_INTENSITY;\n    }\n    const returnCO2ByComponent = {};\n    for (const [key, value] of Object.entries(energyByComponent)) {\n      if (key.startsWith(\"dataCenterEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * dataCenterCarbonIntensity;\n      } else if (key.startsWith(\"consumerDeviceEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * deviceCarbonIntensity;\n      } else if (key.startsWith(\"networkEnergy\")) {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * networkCarbonIntensity;\n      } else {\n        returnCO2ByComponent[key.replace(\"Energy\", \"CO2\")] = value * globalEmissions;\n      }\n    }\n    return returnCO2ByComponent;\n  }\n  perByte(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    if (bytes < 1) {\n      bytes = 0;\n    }\n    const energyBycomponent = this.energyPerByteByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perByte expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  perVisit(bytes, carbonIntensity = false, segmentResults = false, options = {}) {\n    const energyBycomponent = this.energyPerVisitByComponent(bytes, options);\n    if (typeof carbonIntensity !== \"boolean\") {\n      throw new Error(`perVisit expects a boolean for the carbon intensity value. Received: ${carbonIntensity}`);\n    }\n    const co2ValuesbyComponent = this.co2byComponent(energyBycomponent, carbonIntensity, options);\n    const co2Values = Object.values(co2ValuesbyComponent);\n    const co2ValuesSum = co2Values.reduce((prevValue, currentValue) => prevValue + currentValue);\n    if (segmentResults) {\n      return __spreadProps(__spreadValues({}, co2ValuesbyComponent), { total: co2ValuesSum });\n    }\n    return co2ValuesSum;\n  }\n  energyPerByte(bytes) {\n    const energyByComponent = this.energyPerByteByComponent(bytes);\n    const energyValues = Object.values(energyByComponent);\n    return energyValues.reduce((prevValue, currentValue) => prevValue + currentValue);\n  }\n  energyPerVisitByComponent(bytes, options = {}, firstView = FIRST_TIME_VIEWING_PERCENTAGE, returnView = RETURNING_VISITOR_PERCENTAGE, dataReloadRatio = PERCENTAGE_OF_DATA_LOADED_ON_SUBSEQUENT_LOAD) {\n    if (options.dataReloadRatio || options.dataReloadRatio === 0) {\n      dataReloadRatio = options.dataReloadRatio;\n    }\n    if (options.firstVisitPercentage || options.firstVisitPercentage === 0) {\n      firstView = options.firstVisitPercentage;\n    }\n    if (options.returnVisitPercentage || options.returnVisitPercentage === 0) {\n      returnView = options.returnVisitPercentage;\n    }\n    const energyBycomponent = this.energyPerByteByComponent(bytes);\n    const cacheAdjustedSegmentEnergy = {};\n    const energyValues = Object.values(energyBycomponent);\n    for (const [key, value] of Object.entries(energyBycomponent)) {\n      cacheAdjustedSegmentEnergy[`${key} - first`] = value * firstView;\n      cacheAdjustedSegmentEnergy[`${key} - subsequent`] = value * returnView * dataReloadRatio;\n    }\n    return cacheAdjustedSegmentEnergy;\n  }\n  energyPerVisit(bytes) {\n    let firstVisits = 0;\n    let subsequentVisits = 0;\n    const energyBycomponent = Object.entries(this.energyPerVisitByComponent(bytes));\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"first\") > 0) {\n        firstVisits += val;\n      }\n    }\n    for (const [key, val] of energyBycomponent) {\n      if (key.indexOf(\"subsequent\") > 0) {\n        subsequentVisits += val;\n      }\n    }\n    return firstVisits + subsequentVisits;\n  }\n  emissionsPerVisitInGrams(energyPerVisit, carbonintensity = GLOBAL_GRID_INTENSITY) {\n    return formatNumber(energyPerVisit * carbonintensity);\n  }\n  annualEnergyInKwh(energyPerVisit, monthlyVisitors = 1e3) {\n    return energyPerVisit * monthlyVisitors * 12;\n  }\n  annualEmissionsInGrams(co2grams, monthlyVisitors = 1e3) {\n    return co2grams * monthlyVisitors * 12;\n  }\n  annualSegmentEnergy(annualEnergy) {\n    return {\n      consumerDeviceEnergy: formatNumber(annualEnergy * END_USER_DEVICE_ENERGY),\n      networkEnergy: formatNumber(annualEnergy * NETWORK_ENERGY),\n      dataCenterEnergy: formatNumber(annualEnergy * DATACENTER_ENERGY),\n      productionEnergy: formatNumber(annualEnergy * PRODUCTION_ENERGY)\n    };\n  }\n}\nvar sustainable_web_design_default = SustainableWebDesign;\nexport {\n  SustainableWebDesign,\n  sustainable_web_design_default as default\n};\n", "\"use strict\";\nimport OneByte from \"./1byte.js\";\nimport SustainableWebDesign from \"./sustainable-web-design.js\";\nimport {\n  GLOBAL_GRID_INTENSITY,\n  RENEWABLES_GRID_INTENSITY\n} from \"./constants/index.js\";\nimport { parseOptions } from \"./helpers/index.js\";\nclass CO2 {\n  constructor(options) {\n    this.model = new SustainableWebDesign();\n    if ((options == null ? void 0 : options.model) === \"1byte\") {\n      this.model = new OneByte();\n    } else if ((options == null ? void 0 : options.model) === \"swd\") {\n      this.model = new SustainableWebDesign();\n    } else if (options == null ? void 0 : options.model) {\n      throw new Error(`\"${options.model}\" is not a valid model. Please use \"1byte\" for the OneByte model, and \"swd\" for the Sustainable Web Design model.\nSee https://developers.thegreenwebfoundation.org/co2js/models/ to learn more about the models available in CO2.js.`);\n    }\n    this._segment = (options == null ? void 0 : options.results) === \"segment\";\n  }\n  perByte(bytes, green = false) {\n    return this.model.perByte(bytes, green, this._segment);\n  }\n  perVisit(bytes, green = false) {\n    var _a;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      return this.model.perVisit(bytes, green, this._segment);\n    } else {\n      throw new Error(`The perVisit() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n  perByteTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n    let adjustments = {};\n    if (options) {\n      adjustments = parseOptions(options);\n    }\n    return {\n      co2: this.model.perByte(bytes, green, this._segment, adjustments),\n      green,\n      variables: {\n        description: \"Below are the variables used to calculate this CO2 estimate.\",\n        bytes,\n        gridIntensity: {\n          description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n          network: (_c = (_b = (_a = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _a.network) == null ? void 0 : _b.value) != null ? _c : GLOBAL_GRID_INTENSITY,\n          dataCenter: green ? RENEWABLES_GRID_INTENSITY : (_f = (_e = (_d = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _d.dataCenter) == null ? void 0 : _e.value) != null ? _f : GLOBAL_GRID_INTENSITY,\n          production: GLOBAL_GRID_INTENSITY,\n          device: (_i = (_h = (_g = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _g.device) == null ? void 0 : _h.value) != null ? _i : GLOBAL_GRID_INTENSITY\n        }\n      }\n    };\n  }\n  perVisitTrace(bytes, green = false, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n    if ((_a = this.model) == null ? void 0 : _a.perVisit) {\n      let adjustments = {};\n      if (options) {\n        adjustments = parseOptions(options);\n      }\n      return {\n        co2: this.model.perVisit(bytes, green, this._segment, adjustments),\n        green,\n        variables: {\n          description: \"Below are the variables used to calculate this CO2 estimate.\",\n          bytes,\n          gridIntensity: {\n            description: \"The grid intensity (grams per kilowatt-hour) used to calculate this CO2 estimate.\",\n            network: (_d = (_c = (_b = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _b.network) == null ? void 0 : _c.value) != null ? _d : GLOBAL_GRID_INTENSITY,\n            dataCenter: green ? RENEWABLES_GRID_INTENSITY : (_g = (_f = (_e = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _e.dataCenter) == null ? void 0 : _f.value) != null ? _g : GLOBAL_GRID_INTENSITY,\n            production: GLOBAL_GRID_INTENSITY,\n            device: (_j = (_i = (_h = adjustments == null ? void 0 : adjustments.gridIntensity) == null ? void 0 : _h.device) == null ? void 0 : _i.value) != null ? _j : GLOBAL_GRID_INTENSITY\n          },\n          dataReloadRatio: (_k = adjustments == null ? void 0 : adjustments.dataReloadRatio) != null ? _k : 0.02,\n          firstVisitPercentage: (_l = adjustments == null ? void 0 : adjustments.firstVisitPercentage) != null ? _l : 0.75,\n          returnVisitPercentage: (_m = adjustments == null ? void 0 : adjustments.returnVisitPercentage) != null ? _m : 0.25\n        }\n      };\n    } else {\n      throw new Error(`The perVisitDetailed() method is not supported in the model you are using. Try using perByte() instead.\nSee https://developers.thegreenwebfoundation.org/co2js/methods/ to learn more about the methods available in CO2.js.`);\n    }\n  }\n}\nvar co2_default = CO2;\nexport {\n  CO2,\n  co2_default as default\n};\n", "\"use strict\";\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar require_hosting_json = __commonJS({\n  \"src/hosting-json.js\"(exports, module) {\n    async function check(domain, db) {\n      if (typeof domain === \"string\") {\n        return checkInJSON(domain, db);\n      } else {\n        return checkDomainsInJSON(domain, db);\n      }\n    }\n    function checkInJSON(domain, db) {\n      if (db.indexOf(domain) > -1) {\n        return true;\n      }\n      return false;\n    }\n    function greenDomainsFromResults(greenResults) {\n      const entries = Object.entries(greenResults);\n      const greenEntries = entries.filter(([key, val]) => val.green);\n      return greenEntries.map(([key, val]) => val.url);\n    }\n    function checkDomainsInJSON(domains, db) {\n      let greenDomains = [];\n      for (let domain of domains) {\n        if (db.indexOf(domain) > -1) {\n          greenDomains.push(domain);\n        }\n      }\n      return greenDomains;\n    }\n    function find(domain, db) {\n      if (typeof domain === \"string\") {\n        return findInJSON(domain, db);\n      } else {\n        return findDomainsInJSON(domain, db);\n      }\n    }\n    function findInJSON(domain, db) {\n      if (db.indexOf(domain) > -1) {\n        return domain;\n      }\n      return {\n        url: domain,\n        green: false\n      };\n    }\n    function findDomainsInJSON(domains, db) {\n      const result = {};\n      for (let domain of domains) {\n        result[domain] = findInJSON(domain, db);\n      }\n      return result;\n    }\n    module.exports = {\n      check,\n      greenDomainsFromResults,\n      find\n    };\n  }\n});\nexport default require_hosting_json();\n", "\"use strict\";\nimport { getApiRequestHeaders } from \"./helpers/index.js\";\nimport hostingJSON from \"./hosting-json.js\";\nfunction check(domain, optionsOrAgentId) {\n  const options = typeof optionsOrAgentId === \"string\" ? { userAgentIdentifier: optionsOrAgentId } : optionsOrAgentId;\n  if ((options == null ? void 0 : options.db) && options.verbose) {\n    throw new Error(\"verbose mode cannot be used with a local lookup database\");\n  }\n  if (typeof domain === \"string\") {\n    return checkAgainstAPI(domain, options);\n  } else {\n    return checkDomainsAgainstAPI(domain, options);\n  }\n}\nasync function checkAgainstAPI(domain, options = {}) {\n  const req = await fetch(`https://api.thegreenwebfoundation.org/greencheck/${domain}`, {\n    headers: getApiRequestHeaders(options.userAgentIdentifier)\n  });\n  if (options == null ? void 0 : options.db) {\n    return hostingJSON.check(domain, options.db);\n  }\n  const res = await req.json();\n  return options.verbose ? res : res.green;\n}\nasync function checkDomainsAgainstAPI(domains, options = {}) {\n  try {\n    const apiPath = \"https://api.thegreenwebfoundation.org/v2/greencheckmulti\";\n    const domainsString = JSON.stringify(domains);\n    const req = await fetch(`${apiPath}/${domainsString}`, {\n      headers: getApiRequestHeaders(options.userAgentIdentifier)\n    });\n    const allGreenCheckResults = await req.json();\n    return options.verbose ? allGreenCheckResults : greenDomainsFromResults(allGreenCheckResults);\n  } catch (e) {\n    return options.verbose ? {} : [];\n  }\n}\nfunction greenDomainsFromResults(greenResults) {\n  const entries = Object.entries(greenResults);\n  const greenEntries = entries.filter(([key, val]) => val.green);\n  return greenEntries.map(([key, val]) => val.url);\n}\nvar hosting_api_default = {\n  check\n};\nexport {\n  hosting_api_default as default\n};\n", "\"use strict\";\nimport hostingAPI from \"./hosting-api.js\";\nfunction check(domain, optionsOrAgentId) {\n  return hostingAPI.check(domain, optionsOrAgentId);\n}\nvar hosting_default = {\n  check\n};\nexport {\n  hosting_default as default\n};\n", "const data = { \"AFG\": \"414\", \"ALB\": \"0\", \"DZA\": \"528\", \"ASM\": \"753\", \"AND\": \"188\", \"AGO\": \"1476\", \"AIA\": \"753\", \"ATG\": \"753\", \"ARG\": \"478\", \"ARM\": \"390\", \"ABW\": \"753\", \"AUS\": \"808\", \"AUT\": \"242\", \"AZE\": \"534\", \"AZORES (PORTUGAL)\": \"753\", \"BHS\": \"753\", \"BHR\": \"726\", \"BGD\": \"528\", \"BRB\": \"749\", \"BLR\": \"400\", \"BEL\": \"252\", \"BLZ\": \"403\", \"BEN\": \"745\", \"BMU\": \"753\", \"BTN\": \"0\", \"BOL\": \"604\", \"BES\": \"753\", \"BIH\": \"1197\", \"BWA\": \"1486\", \"BRA\": \"284\", \"VGB\": \"753\", \"BRN\": \"681\", \"BGR\": \"911\", \"BFA\": \"753\", \"BDI\": \"414\", \"KHM\": \"1046\", \"CMR\": \"659\", \"CAN\": \"372\", \"CYM\": \"753\", \"CPV\": \"753\", \"CAF\": \"188\", \"TCD\": \"753\", \"CHANNEL ISLANDS (U.K)\": \"753\", \"CHL\": \"657\", \"CHN\": \"899\", \"COL\": \"410\", \"COM\": \"753\", \"COD\": \"0\", \"COG\": \"659\", \"COK\": \"753\", \"CRI\": \"108\", \"CIV\": \"466\", \"HRV\": \"294\", \"CUB\": \"559\", \"CUW\": \"876\", \"CYP\": \"751\", \"CZE\": \"902\", \"DNK\": \"362\", \"DJI\": \"753\", \"DMA\": \"753\", \"DOM\": \"601\", \"ECU\": \"560\", \"EGY\": \"554\", \"SLV\": \"547\", \"GNQ\": \"632\", \"ERI\": \"915\", \"EST\": \"1057\", \"SWZ\": \"0\", \"ETH\": \"0\", \"FLK\": \"753\", \"FRO\": \"753\", \"FJI\": \"640\", \"FIN\": \"267\", \"FRA\": \"158\", \"GUF\": \"423\", \"PYF\": \"753\", \"GAB\": \"946\", \"GMB\": \"753\", \"GEO\": \"289\", \"DEU\": \"650\", \"GHA\": \"495\", \"GIB\": \"779\", \"GRC\": \"507\", \"GRL\": \"264\", \"GRD\": \"753\", \"GLP\": \"753\", \"GUM\": \"753\", \"GTM\": \"798\", \"GIN\": \"753\", \"GNB\": \"753\", \"GUY\": \"847\", \"HTI\": \"1048\", \"HND\": \"662\", \"HUN\": \"296\", \"ISL\": \"0\", \"IND\": \"951\", \"IDN\": \"783\", \"IRN\": \"592\", \"IRQ\": \"1080\", \"IRL\": \"380\", \"IMN\": \"436\", \"ISR\": \"394\", \"ITA\": \"414\", \"JAM\": \"711\", \"JPN\": \"471\", \"JOR\": \"529\", \"KAZ\": \"797\", \"KEN\": \"574\", \"KIR\": \"753\", \"PRK\": \"754\", \"KOR\": \"555\", \"XKX\": \"1145\", \"KWT\": \"675\", \"KGZ\": \"217\", \"LAO\": \"1069\", \"LVA\": \"240\", \"LBN\": \"794\", \"LSO\": \"0\", \"LBR\": \"677\", \"LBY\": \"668\", \"LIE\": \"151\", \"LTU\": \"211\", \"LUX\": \"220\", \"MDG\": \"876\", \"MADEIRA (PORTUGAL)\": \"663\", \"MWI\": \"489\", \"MYS\": \"551\", \"MDV\": \"753\", \"MLI\": \"1076\", \"MLT\": \"520\", \"MHL\": \"753\", \"MTQ\": \"753\", \"MRT\": \"753\", \"MUS\": \"700\", \"MYT\": \"753\", \"MEX\": \"531\", \"FSM\": \"753\", \"MDA\": \"541\", \"MCO\": \"158\", \"MNG\": \"1366\", \"MNE\": \"899\", \"MSR\": \"753\", \"MAR\": \"729\", \"MOZ\": \"234\", \"MMR\": \"719\", \"NAM\": \"355\", \"NRU\": \"753\", \"NPL\": \"0\", \"NLD\": \"326\", \"NCL\": \"779\", \"NZL\": \"246\", \"NIC\": \"675\", \"NER\": \"772\", \"NGA\": \"526\", \"NIU\": \"753\", \"MKD\": \"851\", \"MNP\": \"753\", \"NOR\": \"47\", \"OMN\": \"479\", \"PAK\": \"592\", \"PLW\": \"753\", \"PSE\": \"719\", \"PAN\": \"477\", \"PNG\": \"597\", \"PRY\": \"0\", \"PER\": \"473\", \"PHL\": \"672\", \"POL\": \"828\", \"PRT\": \"389\", \"PRI\": \"596\", \"QAT\": \"503\", \"REU\": \"772\", \"ROU\": \"489\", \"RUS\": \"476\", \"RWA\": \"712\", \"SHN\": \"753\", \"KNA\": \"753\", \"LCA\": \"753\", \"MAF\": \"753\", \"SPM\": \"753\", \"VCT\": \"753\", \"WSM\": \"753\", \"SMR\": \"414\", \"STP\": \"753\", \"SAU\": \"592\", \"SEN\": \"870\", \"SRB\": \"1086\", \"SYC\": \"753\", \"SLE\": \"489\", \"SGP\": \"379\", \"SXM\": \"753\", \"SVK\": \"332\", \"SVN\": \"620\", \"SLB\": \"753\", \"SOM\": \"753\", \"ZAF\": \"1070\", \"SSD\": \"890\", \"ESP\": \"402\", \"LKA\": \"731\", \"SDN\": \"736\", \"SUR\": \"1029\", \"SWE\": \"68\", \"CHE\": \"48\", \"SYR\": \"713\", \"TWN\": \"484\", \"TJK\": \"255\", \"TZA\": \"531\", \"THA\": \"450\", \"TLS\": \"753\", \"TGO\": \"859\", \"TON\": \"753\", \"TTO\": \"559\", \"TUN\": \"468\", \"TUR\": \"376\", \"TKM\": \"927\", \"TCA\": \"753\", \"TUV\": \"753\", \"UGA\": \"279\", \"UKR\": \"768\", \"ARE\": \"556\", \"GBR\": \"380\", \"USA\": \"416\", \"URY\": \"174\", \"UZB\": \"612\", \"VUT\": \"753\", \"VEN\": \"711\", \"VNM\": \"560\", \"VIR\": \"650\", \"YEM\": \"807\", \"ZMB\": \"416\", \"ZWE\": \"1575\", \"MEMO:  EU 27\": \"409\" };\nconst type = \"marginal\";\nconst year = \"2021\";\nvar marginal_intensities_2021_min_default = { data, type, year };\nexport {\n  data,\n  marginal_intensities_2021_min_default as default,\n  type,\n  year\n};\n", "import co2 from \"./co2.js\";\nimport hosting from \"./hosting.js\";\nimport averageIntensity from \"./data/average-intensities.min.js\";\nimport marginalIntensity from \"./data/marginal-intensities-2021.min.js\";\nvar src_default = { co2, hosting, averageIntensity, marginalIntensity };\nexport {\n  averageIntensity,\n  co2,\n  src_default as default,\n  hosting,\n  marginalIntensity\n};\n", "import tgwf from '@tgwf/co2';\r\n\r\nclass CarbonMeter {\r\n\r\n    #listner = undefined;\r\n    #location = 'de';\r\n    #co2 = undefined;\r\n    #totalEmissionsCacheEntry = new ChacheEntry(window.sessionStorage, \"carbonMeter.totalEmission\", Number.MAX_SAFE_INTEGER);\r\n    #carbonIntensityCacheEntry;\r\n    #forecastDataCacheEntry;\r\n\r\n    constructor(location) {\r\n        if (location) {\r\n            this.#location = location;\r\n        }\r\n        this.#co2 = new tgwf.co2();\r\n        let tenMinutes = 600000;\r\n        let fourHours = 14400000;\r\n        this.#carbonIntensityCacheEntry = new ChacheEntry(window.sessionStorage, `carbonMeter.${location}.carbonIntensity`, tenMinutes);\r\n        this.#forecastDataCacheEntry = new ChacheEntry(window.localStorage, `carbonMeter.${location}.forecastData`, fourHours);\r\n    }\r\n\r\n    start() {\r\n        setTimeout(() => {\r\n            this.#startMetering();\r\n        }, 1);\r\n    }\r\n    onMetering(listnerFunc) {\r\n        this.#listner = listnerFunc;\r\n\r\n    }\r\n\r\n    async #startMetering() {\r\n        await this.#getEmissionsFromBrowserRessources();\r\n        await this.#observerEmissionsFromBackgroundTransfer();\r\n    }\r\n\r\n    async #observerEmissionsFromBackgroundTransfer() {\r\n        let carbonIntensity = await this.#getCarbonIntensity();\r\n        const observer = new PerformanceObserver((list) => {\r\n            setTimeout(() => {\r\n                for (const entry of list.getEntries()) {\r\n                    if (entry.initiatorType === \"fetch\" || entry.initiatorType === \"xmlhttprequest\") {\r\n                        let j = entry.toJSON();\r\n                        let bytesSent = j.transferSize;\r\n                        this.#calculateAndReportEmissions(bytesSent, carbonIntensity);\r\n                    }\r\n                }\r\n            }, 1);\r\n\r\n        });\r\n\r\n        observer.observe({\r\n            entryTypes: [\"resource\"]\r\n        });\r\n    }\r\n    async #getEmissionsFromBrowserRessources() {\r\n        let carbonIntensity = await this.#getCarbonIntensity();\r\n        let bytesSent = this.#getTransferSize();\r\n        this.#calculateAndReportEmissions(bytesSent, carbonIntensity);\r\n    }\r\n    #calculateAndReportEmissions(bytesTransfered, carbonIntensity) {\r\n        let result = this.#co2.perByteTrace(\r\n            bytesTransfered,\r\n            false,\r\n            {\r\n                gridIntensity: {\r\n                    device: carbonIntensity,\r\n                    dataCenter: carbonIntensity,\r\n                    networks: carbonIntensity,\r\n                }\r\n            }\r\n        )\r\n        let estimatedCO2 = parseFloat(result.co2.toFixed(2));\r\n        this.#reportEmissions(estimatedCO2);\r\n    }\r\n    #reportEmissions(estimatedCO2) {\r\n        let totalEmission = parseFloat(this.#totalEmissionsCacheEntry.getItem());\r\n\r\n        if (totalEmission) {\r\n            totalEmission += estimatedCO2;\r\n        }\r\n        else {\r\n            totalEmission = estimatedCO2;\r\n        }\r\n        this.#totalEmissionsCacheEntry.setItem(totalEmission);\r\n        if (this.#listner) {\r\n            this.#listner(totalEmission, estimatedCO2);\r\n        }\r\n\r\n    }\r\n    #getTransferSize = () => {\r\n        let totalTransferSize = 0;\r\n\r\n        performance.getEntriesByType('resource').map((resource) => {\r\n            const data = resource.toJSON();\r\n            totalTransferSize += data.transferSize;\r\n        });\r\n\r\n        return totalTransferSize;\r\n    };\r\n    #calculateCarbonIntensityFromForecast(forecast) {\r\n        let start = forecast.Start;\r\n        let intervall = forecast.Interval;\r\n        let ratings = forecast.Ratings;\r\n        let now = Date.now();\r\n        let currentIndex = Math.round((now - start) / intervall);\r\n        if (currentIndex >= 0 && currentIndex < ratings.length) {\r\n            return ratings[currentIndex];\r\n        }\r\n        return null;\r\n    }\r\n    async #getCarbonIntensity() {\r\n        let carbonIntensity = parseFloat(this.#carbonIntensityCacheEntry.getItem());\r\n        if (carbonIntensity === undefined) {\r\n            let forecastData = this.#forecastDataCacheEntry.getItem();\r\n            if (forecastData === undefined) {\r\n                forecastData = this.#getForcastFromServer();\r\n                this.#forecastDataCacheEntry.setItem(forecastData);\r\n            }\r\n            carbonIntensity = this.#calculateCarbonIntensityFromForecast(forcast);\r\n            if (carbonIntensity) {\r\n                this.#carbonIntensityCacheEntry.setItem(carbonIntensity);\r\n            }\r\n        }\r\n        return carbonIntensity;\r\n\r\n    }\r\n    async #getForcastFromServer() {\r\n        let forecast = await this.#fetchData(this.#location);\r\n        return forecast;\r\n    }\r\n    async #fetchData(location) {\r\n        let response = await fetch(`https://carbonawarecomputing.blob.core.windows.net/forecasts/${location}.min.json`);\r\n        let data = await response.json();\r\n        return data;\r\n\r\n    }\r\n}\r\n\r\nclass ChacheEntry {\r\n    #keyName;\r\n    #dueKeyName;\r\n    #due;\r\n    #cacheProvider;\r\n    constructor(cacheProvider, keyName, dueInMiliSeconds) {\r\n        this.#due = dueInMiliSeconds;\r\n        this.#keyName = keyName;\r\n        this.#dueKeyName = keyName + \".Updated\"\r\n        this.#cacheProvider = cacheProvider;\r\n    }\r\n\r\n    getItem() {\r\n        let item = this.#cacheProvider.getItem(this.#keyName);\r\n        if (item) {\r\n            let lastUpdate = parseInt(this.#cacheProvider.getItem(this.#dueKeyName));\r\n            if (lastUpdate + this.#due > Date.now()) {\r\n                return item;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    setItem(value) {\r\n        this.#cacheProvider.setItem(this.#keyName, value);\r\n        this.#cacheProvider.setItem(this.#dueKeyName, Date.now());\r\n    }\r\n\r\n}\r\nexport { CarbonMeter };\r\nexport default CarbonMeter;"],
  "mappings": "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",
  "names": ["check", "greenDomainsFromResults", "check", "data", "type", "data"]
}
